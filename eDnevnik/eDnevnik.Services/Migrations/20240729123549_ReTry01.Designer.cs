// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eDnevnik.Services;

#nullable disable

namespace eDnevnik.Services.Migrations
{
    [DbContext(typeof(eDnevnikDBContext))]
    [Migration("20240729123549_ReTry01")]
    partial class ReTry01
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("eDnevnik.Services.Database.Casovi", b =>
                {
                    b.Property<int>("CasoviID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CasoviID"), 1L, 1);

                    b.Property<int>("GodisnjiPlanProgramID")
                        .HasColumnType("int");

                    b.Property<string>("NazivCasa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CasoviID");

                    b.HasIndex("GodisnjiPlanProgramID");

                    b.ToTable("Casovi");
                });

            modelBuilder.Entity("eDnevnik.Services.Database.GodisnjiPlanProgram", b =>
                {
                    b.Property<int>("GodisnjiPlanProgramID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GodisnjiPlanProgramID"), 1L, 1);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OdjeljenjeID")
                        .HasColumnType("int");

                    b.Property<int>("PredmetID")
                        .HasColumnType("int");

                    b.Property<int>("brojCasova")
                        .HasColumnType("int");

                    b.HasKey("GodisnjiPlanProgramID");

                    b.HasIndex("OdjeljenjeID");

                    b.HasIndex("PredmetID");

                    b.ToTable("GodisnjiPlanProgram");
                });

            modelBuilder.Entity("eDnevnik.Services.Database.KorisniciUloge", b =>
                {
                    b.Property<int>("KorisnikUlogaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikUlogaID"), 1L, 1);

                    b.Property<DateTime>("DatumIzmjene")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<int>("UlogaID")
                        .HasColumnType("int");

                    b.HasKey("KorisnikUlogaID");

                    b.HasIndex("KorisnikID");

                    b.HasIndex("UlogaID");

                    b.ToTable("korisniciUloges");

                    b.HasData(
                        new
                        {
                            KorisnikUlogaID = 1,
                            DatumIzmjene = new DateTime(2024, 7, 29, 14, 35, 49, 206, DateTimeKind.Local).AddTicks(6591),
                            KorisnikID = 1,
                            UlogaID = 1
                        },
                        new
                        {
                            KorisnikUlogaID = 2,
                            DatumIzmjene = new DateTime(2024, 7, 29, 14, 35, 49, 206, DateTimeKind.Local).AddTicks(6630),
                            KorisnikID = 2,
                            UlogaID = 2
                        },
                        new
                        {
                            KorisnikUlogaID = 3,
                            DatumIzmjene = new DateTime(2024, 7, 29, 14, 35, 49, 206, DateTimeKind.Local).AddTicks(6632),
                            KorisnikID = 3,
                            UlogaID = 2
                        },
                        new
                        {
                            KorisnikUlogaID = 4,
                            DatumIzmjene = new DateTime(2024, 7, 29, 14, 35, 49, 206, DateTimeKind.Local).AddTicks(6634),
                            KorisnikID = 4,
                            UlogaID = 1
                        });
                });

            modelBuilder.Entity("eDnevnik.Services.Database.Korisnik", b =>
                {
                    b.Property<int>("KorisnikID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikID"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OdjeljenjeID")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KorisnikID");

                    b.HasIndex("OdjeljenjeID");

                    b.ToTable("Korisnici");

                    b.HasData(
                        new
                        {
                            KorisnikID = 1,
                            Email = "adminadmin@gmail.com",
                            Ime = "admin",
                            KorisnickoIme = "admin",
                            LozinkaHash = "JfJzsL3ngGWki+Dn67C+8WLy73I=",
                            LozinkaSalt = "7TUJfmgkkDvcY3PB/M4fhg==",
                            Prezime = "admin",
                            Telefon = "060000000"
                        },
                        new
                        {
                            KorisnikID = 2,
                            Email = "ucenik@gmail.com",
                            Ime = "ucenik",
                            KorisnickoIme = "ucenik",
                            LozinkaHash = "",
                            LozinkaSalt = "",
                            Prezime = "ucenik",
                            Telefon = "+38700000000"
                        },
                        new
                        {
                            KorisnikID = 3,
                            Email = "roditelj@gmail.com",
                            Ime = "roditelj",
                            KorisnickoIme = "roditelj",
                            LozinkaHash = "",
                            LozinkaSalt = "",
                            Prezime = "roditelj",
                            Telefon = "+38700000000"
                        },
                        new
                        {
                            KorisnikID = 4,
                            Email = "denismusic@gmail.com",
                            Ime = "Denis",
                            KorisnickoIme = "denis",
                            LozinkaHash = "JfJzsL3ngGWki+Dn67C+8WLy73I=",
                            LozinkaSalt = "7TUJfmgkkDvcY3PB/M4fhg==",
                            Prezime = "Music",
                            Telefon = "060300400"
                        });
                });

            modelBuilder.Entity("eDnevnik.Services.Database.Ocjene", b =>
                {
                    b.Property<int>("OcjenaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OcjenaID"), 1L, 1);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("Ocjena")
                        .HasColumnType("int");

                    b.Property<int>("PredmetID")
                        .HasColumnType("int");

                    b.Property<int>("ProfesorID")
                        .HasColumnType("int");

                    b.Property<int>("UcenikID")
                        .HasColumnType("int");

                    b.HasKey("OcjenaID");

                    b.HasIndex("PredmetID");

                    b.HasIndex("ProfesorID");

                    b.HasIndex("UcenikID");

                    b.ToTable("Ocjene");

                    b.HasData(
                        new
                        {
                            OcjenaID = 1,
                            Datum = new DateTime(2024, 7, 29, 14, 35, 49, 206, DateTimeKind.Local).AddTicks(6677),
                            Ocjena = 5,
                            PredmetID = 1,
                            ProfesorID = 1,
                            UcenikID = 2
                        },
                        new
                        {
                            OcjenaID = 2,
                            Datum = new DateTime(2024, 7, 29, 14, 35, 49, 206, DateTimeKind.Local).AddTicks(6684),
                            Ocjena = 4,
                            PredmetID = 2,
                            ProfesorID = 1,
                            UcenikID = 2
                        });
                });

            modelBuilder.Entity("eDnevnik.Services.Database.Odjeljenje", b =>
                {
                    b.Property<int>("OdjeljenjeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OdjeljenjeID"), 1L, 1);

                    b.Property<string>("NazivOdjeljenja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RazrednikID")
                        .HasColumnType("int");

                    b.HasKey("OdjeljenjeID");

                    b.HasIndex("RazrednikID");

                    b.ToTable("Odjeljenje");

                    b.HasData(
                        new
                        {
                            OdjeljenjeID = 1,
                            NazivOdjeljenja = "1A",
                            RazrednikID = 1
                        },
                        new
                        {
                            OdjeljenjeID = 2,
                            NazivOdjeljenja = "2A",
                            RazrednikID = 4
                        });
                });

            modelBuilder.Entity("eDnevnik.Services.Database.Poruke", b =>
                {
                    b.Property<int>("PorukaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PorukaID"), 1L, 1);

                    b.Property<DateTime>("DatumSlanja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Odgovor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfesorID")
                        .HasColumnType("int");

                    b.Property<int>("RoditeljID")
                        .HasColumnType("int");

                    b.Property<string>("SadrzajPoruke")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UcenikID")
                        .HasColumnType("int");

                    b.HasKey("PorukaID");

                    b.HasIndex("ProfesorID");

                    b.HasIndex("RoditeljID");

                    b.HasIndex("UcenikID");

                    b.ToTable("Poruke");
                });

            modelBuilder.Entity("eDnevnik.Services.Database.Predmet", b =>
                {
                    b.Property<int>("PredmetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PredmetID"), 1L, 1);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateMachine")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PredmetID");

                    b.ToTable("Predmeti");

                    b.HasData(
                        new
                        {
                            PredmetID = 1,
                            Naziv = "Matematika",
                            Opis = "Sabiranje,oduzimanje,množenje,dijeljenje"
                        },
                        new
                        {
                            PredmetID = 2,
                            Naziv = "Biologija",
                            Opis = "Biljke"
                        });
                });

            modelBuilder.Entity("eDnevnik.Services.Database.Uloge", b =>
                {
                    b.Property<int>("UlogaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UlogaID"), 1L, 1);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UlogaID");

                    b.ToTable("Uloge");

                    b.HasData(
                        new
                        {
                            UlogaID = 1,
                            Naziv = "admin",
                            Opis = "admin/profesor"
                        },
                        new
                        {
                            UlogaID = 2,
                            Naziv = "učenik",
                            Opis = "učenik/roditelj"
                        });
                });

            modelBuilder.Entity("KorisnikPredmet", b =>
                {
                    b.Property<int>("PredmetID")
                        .HasColumnType("int");

                    b.Property<int>("UceniciKorisnikID")
                        .HasColumnType("int");

                    b.HasKey("PredmetID", "UceniciKorisnikID");

                    b.HasIndex("UceniciKorisnikID");

                    b.ToTable("KorisnikPredmet");
                });

            modelBuilder.Entity("eDnevnik.Services.Database.Casovi", b =>
                {
                    b.HasOne("eDnevnik.Services.Database.GodisnjiPlanProgram", "GodisnjiPlanProgram")
                        .WithMany("Casovi")
                        .HasForeignKey("GodisnjiPlanProgramID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GodisnjiPlanProgram");
                });

            modelBuilder.Entity("eDnevnik.Services.Database.GodisnjiPlanProgram", b =>
                {
                    b.HasOne("eDnevnik.Services.Database.Odjeljenje", "Odjeljenje")
                        .WithMany()
                        .HasForeignKey("OdjeljenjeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("eDnevnik.Services.Database.Predmet", "Predmet")
                        .WithMany()
                        .HasForeignKey("PredmetID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Odjeljenje");

                    b.Navigation("Predmet");
                });

            modelBuilder.Entity("eDnevnik.Services.Database.KorisniciUloge", b =>
                {
                    b.HasOne("eDnevnik.Services.Database.Korisnik", "Korisnik")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eDnevnik.Services.Database.Uloge", "Uloga")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("UlogaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("Uloga");
                });

            modelBuilder.Entity("eDnevnik.Services.Database.Korisnik", b =>
                {
                    b.HasOne("eDnevnik.Services.Database.Odjeljenje", "Odjeljenje")
                        .WithMany("Ucenici")
                        .HasForeignKey("OdjeljenjeID");

                    b.Navigation("Odjeljenje");
                });

            modelBuilder.Entity("eDnevnik.Services.Database.Ocjene", b =>
                {
                    b.HasOne("eDnevnik.Services.Database.Predmet", "Predmet")
                        .WithMany("Ocjene")
                        .HasForeignKey("PredmetID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("eDnevnik.Services.Database.Korisnik", "Profesor")
                        .WithMany()
                        .HasForeignKey("ProfesorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("eDnevnik.Services.Database.Korisnik", "Ucenik")
                        .WithMany("Ocjene")
                        .HasForeignKey("UcenikID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Predmet");

                    b.Navigation("Profesor");

                    b.Navigation("Ucenik");
                });

            modelBuilder.Entity("eDnevnik.Services.Database.Odjeljenje", b =>
                {
                    b.HasOne("eDnevnik.Services.Database.Korisnik", "Razrednik")
                        .WithMany()
                        .HasForeignKey("RazrednikID");

                    b.Navigation("Razrednik");
                });

            modelBuilder.Entity("eDnevnik.Services.Database.Poruke", b =>
                {
                    b.HasOne("eDnevnik.Services.Database.Korisnik", "Profesor")
                        .WithMany()
                        .HasForeignKey("ProfesorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("eDnevnik.Services.Database.Korisnik", "Roditelj")
                        .WithMany()
                        .HasForeignKey("RoditeljID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("eDnevnik.Services.Database.Korisnik", "Ucenik")
                        .WithMany()
                        .HasForeignKey("UcenikID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Profesor");

                    b.Navigation("Roditelj");

                    b.Navigation("Ucenik");
                });

            modelBuilder.Entity("KorisnikPredmet", b =>
                {
                    b.HasOne("eDnevnik.Services.Database.Predmet", null)
                        .WithMany()
                        .HasForeignKey("PredmetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eDnevnik.Services.Database.Korisnik", null)
                        .WithMany()
                        .HasForeignKey("UceniciKorisnikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eDnevnik.Services.Database.GodisnjiPlanProgram", b =>
                {
                    b.Navigation("Casovi");
                });

            modelBuilder.Entity("eDnevnik.Services.Database.Korisnik", b =>
                {
                    b.Navigation("KorisniciUloge");

                    b.Navigation("Ocjene");
                });

            modelBuilder.Entity("eDnevnik.Services.Database.Odjeljenje", b =>
                {
                    b.Navigation("Ucenici");
                });

            modelBuilder.Entity("eDnevnik.Services.Database.Predmet", b =>
                {
                    b.Navigation("Ocjene");
                });

            modelBuilder.Entity("eDnevnik.Services.Database.Uloge", b =>
                {
                    b.Navigation("KorisniciUloge");
                });
#pragma warning restore 612, 618
        }
    }
}
